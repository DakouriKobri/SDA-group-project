[{"/Users/clementcardona/Desktop/SDA-group-project/frontend/src/index.js":"1","/Users/clementcardona/Desktop/SDA-group-project/frontend/src/App.jsx":"2","/Users/clementcardona/Desktop/SDA-group-project/frontend/src/services/Auth.js":"3","/Users/clementcardona/Desktop/SDA-group-project/frontend/src/api/AuthApi.js":"4","/Users/clementcardona/Desktop/SDA-group-project/frontend/src/services/TestMethods.jsx":"5","/Users/clementcardona/Desktop/SDA-group-project/frontend/src/components/Footer.jsx":"6","/Users/clementcardona/Desktop/SDA-group-project/frontend/src/components/ToggleLanguage.jsx":"7","/Users/clementcardona/Desktop/SDA-group-project/frontend/src/components/HeaderBackground.jsx":"8","/Users/clementcardona/Desktop/SDA-group-project/frontend/src/pages/DiscoverPage/DiscoverPage.jsx":"9","/Users/clementcardona/Desktop/SDA-group-project/frontend/src/pages/VotingPage/VotingPage.jsx":"10","/Users/clementcardona/Desktop/SDA-group-project/frontend/src/pages/auth/AuthPage.jsx":"11","/Users/clementcardona/Desktop/SDA-group-project/frontend/src/pages/TestPage/TestPage.jsx":"12","/Users/clementcardona/Desktop/SDA-group-project/frontend/src/pages/ProfilePage/ProfilePage.jsx":"13","/Users/clementcardona/Desktop/SDA-group-project/frontend/src/pages/WinnerPage/WinnerPage.jsx":"14","/Users/clementcardona/Desktop/SDA-group-project/frontend/src/api/Api.js":"15","/Users/clementcardona/Desktop/SDA-group-project/frontend/src/services/Methods.js":"16","/Users/clementcardona/Desktop/SDA-group-project/frontend/src/api/ApiCalls.js":"17","/Users/clementcardona/Desktop/SDA-group-project/frontend/src/components/UploadButton.jsx":"18","/Users/clementcardona/Desktop/SDA-group-project/frontend/src/components/Navbar.jsx":"19","/Users/clementcardona/Desktop/SDA-group-project/frontend/src/components/SlidingMenu.jsx":"20","/Users/clementcardona/Desktop/SDA-group-project/frontend/src/components/Popup.jsx":"21","/Users/clementcardona/Desktop/SDA-group-project/frontend/src/components/VoteComponent.jsx":"22","/Users/clementcardona/Desktop/SDA-group-project/frontend/src/pages/ProfilePage/ProfilePageContent.jsx":"23","/Users/clementcardona/Desktop/SDA-group-project/frontend/src/components/Card.jsx":"24","/Users/clementcardona/Desktop/SDA-group-project/frontend/src/components/UserMeta.jsx":"25","/Users/clementcardona/Desktop/SDA-group-project/frontend/src/components/EditProfileButton.jsx":"26","/Users/clementcardona/Desktop/SDA-group-project/frontend/src/components/ProfileCard.jsx":"27"},{"size":769,"mtime":1620762395072,"results":"28","hashOfConfig":"29"},{"size":3349,"mtime":1620803026384,"results":"30","hashOfConfig":"29"},{"size":1393,"mtime":1620803026390,"results":"31","hashOfConfig":"29"},{"size":517,"mtime":1620723305834,"results":"32","hashOfConfig":"29"},{"size":1383,"mtime":1620803026391,"results":"33","hashOfConfig":"29"},{"size":1840,"mtime":1620804465535,"results":"34","hashOfConfig":"29"},{"size":901,"mtime":1620763473552,"results":"35","hashOfConfig":"29"},{"size":584,"mtime":1620723306087,"results":"36","hashOfConfig":"29"},{"size":1668,"mtime":1620802787118,"results":"37","hashOfConfig":"29"},{"size":1658,"mtime":1620802876088,"results":"38","hashOfConfig":"29"},{"size":1481,"mtime":1620803026389,"results":"39","hashOfConfig":"29"},{"size":4075,"mtime":1620759196762,"results":"40","hashOfConfig":"29"},{"size":949,"mtime":1620803026388,"results":"41","hashOfConfig":"29"},{"size":1734,"mtime":1620803026389,"results":"42","hashOfConfig":"29"},{"size":715,"mtime":1620723305832,"results":"43","hashOfConfig":"29"},{"size":2677,"mtime":1620803026390,"results":"44","hashOfConfig":"29"},{"size":1167,"mtime":1620723305833,"results":"45","hashOfConfig":"29"},{"size":2455,"mtime":1620723306096,"results":"46","hashOfConfig":"29"},{"size":397,"mtime":1620723306087,"results":"47","hashOfConfig":"29"},{"size":1989,"mtime":1620800507698,"results":"48","hashOfConfig":"29"},{"size":3352,"mtime":1620723306090,"results":"49","hashOfConfig":"29"},{"size":616,"mtime":1620723306097,"results":"50","hashOfConfig":"29"},{"size":3221,"mtime":1620803026388,"results":"51","hashOfConfig":"29"},{"size":842,"mtime":1620804060192,"results":"52","hashOfConfig":"29"},{"size":618,"mtime":1620803026387,"results":"53","hashOfConfig":"29"},{"size":3207,"mtime":1620723306085,"results":"54","hashOfConfig":"29"},{"size":1034,"mtime":1620804066896,"results":"55","hashOfConfig":"29"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},"1u4uv4j",{"filePath":"59","messages":"60","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"58"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"58"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"58"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"58"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"58"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"58"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"58"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"58"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"58"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"58"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"58"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"58"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"58"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"58"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"58"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"120","messages":"121","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"58"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"58"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/clementcardona/Desktop/SDA-group-project/frontend/src/index.js",[],["128","129"],"/Users/clementcardona/Desktop/SDA-group-project/frontend/src/App.jsx",["130","131"],"// NPM Packages\nimport React, { useState,useEffect } from \"react\";\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport axios from \"axios\";\n\n// Project files\nimport Auth from \"./services/Auth\";\nimport AuthPage from \"./pages/auth/AuthPage\";\nimport \"./styles/App.css\";\nimport LoginPage from \"./pages/auth/AuthPage\";\nimport DiscoverPage from \"./pages/DiscoverPage/DiscoverPage\";\nimport ProfilePage from \"./pages/ProfilePage/ProfilePage\";\nimport WinnerPage from \"./pages/WinnerPage/WinnerPage\";\nimport VotingPage from \"./pages/VotingPage/VotingPage\";\nimport Footer from \"./components/Footer\";\nimport AuthApi from \"./api/AuthApi\";\n\n//Test page\nimport TestPage from \"./pages/TestPage/TestPage\";\nimport TestMethods from \"./services/TestMethods\";\nimport HeaderBackground from \"./components/HeaderBackground\";\nimport ToggleLanguage from \"./components/ToggleLanguage\";\n\n\nexport default function App() {\n    // State\n    const [loggedIn, setLoggedIn] = useState(Auth.isLoggedIn());\n    const [status, setStatus] = useState(0); // 0 = loading data, 1 = data loaded, 2 = error;\n    const [users, setUsers] = useState([]);\n   \n    const MOCKUP_URL = \"https://api.jsonbin.io/b/609a7407e0aabd6e191b79d7/1\"\n    const url = MOCKUP_URL\n\n    // Constants\n    Auth.bindLoggedInStateSetter(setLoggedIn);\n\n    //Methods\n    //setting the favicon \n    useEffect(() => {\n        document.title = \"[in]Style \"\n     }, []);\n\n\n  //Fetching data\n     useEffect(() => {\n\n      axios.get(url, {\n        headers: {\n          \"secret-key\": \"$2b$10$1FTntP8VlEu/VMahO9bDIOwOkDJl76xIEMRL1m5UqOUGR00Ic5Ez.\",\n        },\n      }).then(response => onFetchSuccess(response.data))\n      .catch((error) => onFetchFail(error));   \n\n    }, [setUsers, setStatus]);\n  \n    \n    function onFetchSuccess(res) {      \n      setUsers(res);\n      setStatus(1);\n    }\n  \n    function onFetchFail(error) {\n      console.log(\"Error\", error);\n      setStatus(2);\n    }\n  \n  //console.log(\"users\",users,status)\n///////////////\n\n\n    // Components\n    const loggedInRouter = (\n      <BrowserRouter>\n        <div>\n          \n          <HeaderBackground />\n          <ToggleLanguage />\n          {status === 0 && <p className=\"loader\" ></p>}\n          {status === 2 && <p className=\"error\" >Please check your connection</p>}\n          {status === 1 && \n      \n\n          <Switch>\n            <Route path=\"/login\">\n              <LoginPage />\n            </Route>\n\n            <Route path=\"/profile/:userEmail\"  component=  {(props) => \n              (<ProfilePage users={users} userToDisplay={props.match.params.userEmail} />)} /> {/* ok */}\n\n            <Route path=\"/discover\">\n              <DiscoverPage users = {users} /> {/* ok */}\n            </Route>\n\n            <Route path=\"/vote\">\n              <VotingPage users = {users} /> {/* ok */}\n            </Route>\n\n            <Route exact path=\"/\">\n              <WinnerPage users = {users} /> {/* ok */}\n            </Route>\n\n            {/* TESTING ROUTES */}\n\n            <Route path=\"/test\">\n              <TestPage  /> {/* not needed here*/}\n            </Route>\n\n            <Route path=\"/testmethods\">\n              <TestMethods users = {users} /> {/* ok */}\n            </Route>\n          </Switch>\n\n}\n\n          <Footer />\n        </div>\n      </BrowserRouter>\n    );\n\n    return loggedIn ? loggedInRouter : <AuthPage />;\n}\n","/Users/clementcardona/Desktop/SDA-group-project/frontend/src/services/Auth.js",[],"/Users/clementcardona/Desktop/SDA-group-project/frontend/src/api/AuthApi.js",[],"/Users/clementcardona/Desktop/SDA-group-project/frontend/src/services/TestMethods.jsx",["132","133","134","135"],"import { React, useState, useEffect } from \"react\";\nimport Methods from './Methods'\nimport AuthApi from \"../api/AuthApi\";\n\n\nexport default function TestMethods({users}) {\n  // Constants\n  const currentUser = AuthApi.getCurrentUser(); \n  \nconst userId = 2 ;\nconst emailById = Methods.getEmailById(users,2);\nconst email = \"dmartindale3@newyorker.com\" ;\n//const usernameByEmail = Methods.getUsernameByEmail(users,email);\n/* const LikesByEmail = Methods.getTotalLikesByEmail(users,email); */\n\nconsole.log(users)\n\nreturn (\n    <div className=\"general-container\">\n      \n      <div className = \"test-wrapper\">\n        <h2>TEST METHODS JSON PAGE:</h2>\n\n{/* Test get currentUser name */}\n      <div className=\"upload-box-test\"> \n      <h5>user id : {userId} => email : {emailById}</h5>    \n          \n      </div>\n\n      {/* Test get currentUser name */}\n      <div className=\"upload-box-test\"> \n      {/* <h5>email : {email } => username: {usernameByEmail}</h5>  */}   \n          \n      </div>\n\n\n      {/* Test getLikes by email */}\n      <div className=\"upload-box-test\"> \n      {/* <h5>email : {email} - likes : {LikesByEmail}</h5>  */}   \n          \n      </div>\n\n\n\n        {/* Test get pictures url by email */}\n        <div className=\"upload-box-test\"> \n      {/* <h5>email : {email} - likes : {LikesByEmail}</h5>   */}  \n          \n      </div>\n\n\n\n\n      </div>    \n     </div>\n  );\n}","/Users/clementcardona/Desktop/SDA-group-project/frontend/src/components/Footer.jsx",["136","137","138","139"],"/Users/clementcardona/Desktop/SDA-group-project/frontend/src/components/ToggleLanguage.jsx",["140"],"import {React,useState }from \"react\";\nimport { useTranslation } from \"react-i18next\";\n\nexport default function ToggleLanguage() {\n\nconst [check, setCheck] = useState(false);\nconst [t, i18n] = useTranslation('common');\n\n  // Methods\n  const handleToggle = () => {\n\n    setCheck(value => !value);\n\n    if(check === true){\n      console.log(\"english\")\n      i18n.changeLanguage(\"en\")\n    }else{\n      console.log(\"swedish\")\n      i18n.changeLanguage(\"sv\")\n    }\n\n\n  }\n\n\n\n \n  return (\n    <label className=\"toggle-label\">\n\n      {/* <p>{t(\"main.title\")}</p> */}\n\n      <p className=\"label-text\">ENG</p>\n      <div className=\"toggle\">\n        <input\n          className=\"toggle-state\"\n          type=\"checkbox\"\n          checked={check}\n          onChange={handleToggle}\n        />\n        <div className=\"indicator\"></div>\n      </div>\n      <p className=\"label-text\">SWE</p>\n      \n\n\n    </label>\n  );\n}\n","/Users/clementcardona/Desktop/SDA-group-project/frontend/src/components/HeaderBackground.jsx",["141","142","143","144","145"],"// unused - TODO - implement for refactoring\n\nimport { React} from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Popover } from \"@varld/popover\";\n\n\nimport UploadButton from \"./UploadButton\";\n\n\nimport homeButton from \"../assets/img/homeButton.png\"\nimport navLogo from \"../assets/img/logo/instyle.svg\"\n\nexport default function HeaderBackground() {\n\n\n  return (\n    \n      <div className=\"header-wrapper\">\n      <div className=\"header-deco-sub\"></div>\n      <div className=\"header-deco-mid\"></div>\n      <div className=\"header-deco-top\"></div>\n      </div>\n\n        \n  );\n}\n","/Users/clementcardona/Desktop/SDA-group-project/frontend/src/pages/DiscoverPage/DiscoverPage.jsx",[],"/Users/clementcardona/Desktop/SDA-group-project/frontend/src/pages/VotingPage/VotingPage.jsx",["146","147","148"],"import { React, useState, useEffect } from \"react\";\n\nimport \"../../styles/base.css\";\nimport NavBar from \"../../components/Navbar\";\nimport UserMeta from \"../../components/UserMeta\";\nimport VoteComponent from \"../../components/VoteComponent\";\nimport Auth from \"../../services/Auth\";\nimport AuthApi from \"../../api/AuthApi\";\nimport SlidingMenu from \"../../components/SlidingMenu\";\n\nexport default function VotingPage({users}) {\n  // Constants\n  const randomId = Math.floor(Math.random() * users.length);\n  const randomUser = users[randomId];\n  const randomPictureId = Math.floor(Math.random() * randomUser.pictures.length)  \n\n  return (\n    <div className=\"general-container\">\n\n      <header>\n        <SlidingMenu />\n        <div className=\"nav-container\">\n          <NavBar onLogout={() => Auth.logout()} />\n        </div>\n      </header>\n           \n        <main>\n          <div className=\"winner-content\">\n            <h1>Vote for this style ...</h1>\n            <UserMeta user={randomUser} />\n\n            <div className=\"wrapper-img-square\">\n              <img\n                id=\"main-img\"\n                src={randomUser.pictures[randomPictureId].url }\n                alt=\"main-logo\"\n              />\n              \n              {/*  for testing, retrieve a random id and picture id of that user\n              <p> userId :{randomUser.id}</p>\n              <p> pictureId :{randomUser.pictures[Math.floor(Math.random() * randomUser.pictures.length)].id}</p> */}\n            \n            </div>\n            <div className=\"under-img-container\">\n              <VoteComponent />\n            </div>\n          </div>\n        </main>\n      \n    </div>\n  );\n}\n","/Users/clementcardona/Desktop/SDA-group-project/frontend/src/pages/auth/AuthPage.jsx",["149"],"// NPM Packages\nimport React from \"react\";\n\n// Project files\nimport \"../../styles/base.css\";\nimport Auth from \"../../services/Auth\";\nimport background from \"../../assets/img/landingBackground.gif\";\nimport Popup from \"../../components/Popup\";\n\n\nexport default function LoginPage() {\n    \n    //constants\n    \n    // Methods\n    async function login(loginData) {\n        const loginSuccess = await Auth.login(loginData);\n        \n        if (!loginSuccess) {\n            alert(\"Invalid credentials\");           \n        }\n        \n    }\n\n    async function register(registrationData) {\n        const registerSuccess = await Auth.register(registrationData);\n        if (!registerSuccess) {\n            alert(\"Couldn't register check credentials and try again\");\n        }\n    }\n    return (\n      <div className=\"wrapper\">\n        {/* <img src={background} alt=\"landBack\" id=\"background\" /> */}\n\n        <main>\n          <div className=\"centered-container\">\n            <div className=\"title\">\n           \n            <h3><strong>In</strong>style</h3>\n            <h1> Be the one </h1>\n             </div>\n\n            <div className=\"popup-container\">\n              \n              <Popup className=\"signInbtn\" onSubmit={login} signIn={true} />\n              <Popup\n                className=\"registerbtn\"\n                onSubmit={register}\n                signIn={false}\n                \n              />\n            </div>\n\n\n\n          </div>\n        </main>\n      </div>\n    );\n}\n","/Users/clementcardona/Desktop/SDA-group-project/frontend/src/pages/TestPage/TestPage.jsx",["150","151","152","153","154","155","156"],"import { React, useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport \"../../styles/base.css\";\nimport Auth from \"../../services/Auth\";\nimport AuthApi from \"../../api/AuthApi\";\nimport ApiCalls from \"../../api/ApiCalls\";\nimport ToggleLanguage from \"../../components/ToggleLanguage\";\n\nexport default function TestPage() {\n  // Constants\n\n  const currentUser = AuthApi.getCurrentUser();\n\n  const API_URL = \"https://my.api.mockaroo.com/user.json?key=ae007e80\";\n  const JSON_MOCKUP = require(\"../../api/api_users.json\");\n  const JSON_MOCKUP_URL = \"../../api/api_users.json\";\n\n  //states\n  const [users, setUsers] = useState([]);\n  const [file, setFile] = useState();\n  const [likes, setLikes] = useState(0);\n  const [dislikes, setDislikes] = useState(0);\n    \n  // Methods //\n\n  //fetch data distant API //\n  function fetchdataURL() {\n    fetch(API_URL)\n      .then((response) => response.json())\n      .then((json) => setUsers(json));\n  }\n\n  // fetch data local MOCKUP //\n  function fetchdataMOCKUP() {\n    setUsers(JSON_MOCKUP);\n  }\n\n  // use Effect to fetch the data //\n  useEffect(() => {\n    fetchdataMOCKUP();\n  }, []);\n\n  // handle the file submitted by client //\n  function handleFile(event) {\n    setFile(event.target.files[0]);\n  }\n\n  // handle the upload to dB //\n  function handleUpload() {\n    console.log(file, \"state file\");\n    const formdata = new FormData();\n    formdata.append(\"file\", file);\n    formdata.append(\"user\", file);\n\n    ApiCalls.uploadPicture(formdata);\n  }\n\n\n// request to post likes for picture at id 1 - WORKING ON REFRESH //\n  function addLike(){\n\n    ApiCalls.addLike(1)\n    .then((response) => {\n      console.log(response);\n    }, (error) => {\n      console.log(error);\n    })    \n    ;\n   }\n\n\n   // request to post likes for picture at id 1 - WORKING ON REFRESH //\n  function addDislike(pictureId){\n\n    ApiCalls.addDislike(1)\n    .then((response) => {\n      console.log(response);\n    }, (error) => {\n      console.log(error);\n    })    \n    ;\n   }\n\n\n// request to get likes for picture at id 1 //\n  function getLikes(pictureId){\n\n    ApiCalls.getLikes(pictureId)\n    .then((res) => {\n      console.log(\"likes :\" ,res.data);\n      setLikes(res.data);\n    }\n    );   \n  }   \n\n// request to get dislikes for picture at id 1 //\n  function getDislikes(pictureId){\n    ApiCalls.getDislikes(pictureId)\n    .then((res) => {\n      console.log(\"dislikes\" ,res.data);\n      setDislikes(res.data);\n    }\n    );   \n  }\n\n  //use Effect triggered when components mounts ( page refresh) //\n  useEffect(() => {\n    getLikes(1);\n    getDislikes(1);\n    }, []);\n\n  return (\n    \n    <div className=\"general-container\">\n\n<div className=\"test-wrapper\">\n        <ToggleLanguage />\n      </div>\n\n      <div className=\"test-wrapper\">\n        <h2>TEST PAGE:</h2>\n\n        {/* Test get currentUser name */}\n        <div className=\"upload-box-test\">\n          <h3>Current user :</h3>\n          <h4>{AuthApi.getCurrentUser()}</h4>\n        </div>\n\n        {/* Test upload a picture */}\n        <div className=\"upload-box-test\">\n          <h3>Upload a picture</h3>\n          <input type=\"file\" onChange={handleFile} />\n          <button type=\"button\" onClick={handleUpload}>\n            Upload\n          </button>\n        </div>\n\n        {/* Test display picture at id=1 */}\n        <div className=\"upload-box-test\">\n          <h3>Display picture with id=1</h3>\n\n          <h4>Picture at id:1 - not possible to display yet</h4>\n        </div>\n\n        {/* Test adding a like / adding a dislike */}\n        <div className=\"upload-box-test\">\n          <h3>Like and Dislike the picture at id=1 (refresh)</h3>\n\n          <button onClick={() => addLike(1)}> Like </button>\n          <button onClick={() => addDislike(1)}> Dislike </button>\n        </div>\n\n        {/* Test getting the likes / dislikes for picture at id=1 */}\n        <div className=\"upload-box-test\">\n          <h3>GET likes and dislikes of picture with id=1</h3>\n          <p>Likes : {likes} </p>\n          <p>Dislikes : {dislikes}</p>\n        </div>\n      </div>\n\n\n      \n    </div>\n  );\n}","/Users/clementcardona/Desktop/SDA-group-project/frontend/src/pages/ProfilePage/ProfilePage.jsx",["157","158","159"],"import React from \"react\";\nimport { useEffect, useState } from \"react\";\n\nimport \"../../styles/base.css\";\nimport NavBar from \"../../components/Navbar\";\nimport Auth from \"../../services/Auth\";\nimport ProfilePageContent from \"../ProfilePage/ProfilePageContent\";\nimport SlidingMenu from \"../../components/SlidingMenu\";\nimport Footer from \"../../components/Footer\"\nimport AuthApi from \"../../api/AuthApi\";\n\nexport default function ProfilePage({ users, userToDisplay}) {\n\nconst currentUserEmail = AuthApi.getCurrentUser();\n\n//console.log(users)\n//console.log(userToDisplay)\n\n  return (\n    <div className=\"general-container\">\n      <header>\n        <SlidingMenu />\n        <div className=\"nav-container\">\n          <NavBar onLogout={() => Auth.logout()} />\n        </div>\n      </header>\n\n      <main>\n     \n        <ProfilePageContent users={users} userToDisplay={userToDisplay}   />\n\n      </main>\n\n      <footer> <Footer /> </footer>\n    </div>\n  );\n}\n","/Users/clementcardona/Desktop/SDA-group-project/frontend/src/pages/WinnerPage/WinnerPage.jsx",["160","161"],"import React from \"react\";\nimport { useTranslation } from \"react-i18next\";\n\nimport \"../../styles/base.css\";\nimport NavBar from \"../../components/Navbar\";\nimport UserMeta from \"../../components/UserMeta\";\nimport king from \"../../assets/img/icons/crown.svg\"\nimport Auth from \"../../services/Auth\";\nimport Methods from \"../../services/Methods\";\nimport SlidingMenu from \"../../components/SlidingMenu\";\nimport like from \"../../assets/img/logo/flame.png\";\n\n\n\nexport default function WinnerPage({users}) {\n  \n  // Constants  \n  //const winnerObj = Methods.getWinner(users);\n  const winner = users[Methods.getWinner(users)[0]]\n  const winnerPicId = Methods.getWinner(users)[1]\nconsole.log(winnerPicId)\nconst [t, i18n] = useTranslation('common');\n\n  return (\n    <div className=\"general-container\">\n      <header>\n      <SlidingMenu />\n      <div className=\"nav-container\">\n        <NavBar onLogout={() => Auth.logout()} />\n      </div>\n      \n      </header>\n\n        <main>\n          <div className=\"winner-content\">\n            <h1> <img className=\"img-title img-30 \" src={king} /> {t(\"winner.title\")}</h1>\n            <UserMeta user={winner} />\n            <div>\n            <div className=\"wrapper-img-square\">\n              <img id=\"main-img\" src={winner.pictures[winnerPicId].url} alt=\"main-img\" />\n            </div>\n            <p className = \"winner-score\">{winner.pictures[winnerPicId].likes} <img className=\"img-30\" src={like} alt=\"logo-like\" /></p>\n            </div>\n\n            <div className=\"under-img-container\">\n              <a href= {\"http://www.instagram.com/\" + winner.instagram} target=\"blank\" className=\"btn-blue\">{t(\"winner.button\")} </a>\n            </div>\n          </div>\n        </main>\n      \n    </div>\n  );\n}\n","/Users/clementcardona/Desktop/SDA-group-project/frontend/src/api/Api.js",[],"/Users/clementcardona/Desktop/SDA-group-project/frontend/src/services/Methods.js",[],"/Users/clementcardona/Desktop/SDA-group-project/frontend/src/api/ApiCalls.js",["162"],"import Api from \"./Api\";\nimport axios from \"axios\";\nimport Auth from \"../services/Auth\";\n\nclass ApiCalls {\n  //TODO - REFACTOR AXIOS CALLS HERE:\n\n  // upload a picture to dB - works\n  uploadPicture(item) {\n    axios.post(\"http://localhost:8080/upload\", item, {\n      headers: {\n        Authorization: Auth.getAuthorizationHeader(),\n      },\n    });\n  }\n\n\n  // POST //\n  addLike(pictureId) {\n    return axios.post(\"http://localhost:8080/likes/\" + pictureId, \"\", {\n      headers: {\n        Authorization: Auth.getAuthorizationHeader(),\n      },\n    });\n  }\n  addDislike(pictureId) {\n    return axios.post(\"http://localhost:8080/dislikes/\" + pictureId, \"\", {\n      headers: {\n        Authorization: Auth.getAuthorizationHeader(),\n      },\n    });\n  }\n\n// GET  //\n  getLikes(pictureId) {\n    return axios.get(\"http://localhost:8080/likes/\" + pictureId, {\n      headers: {\n        Authorization: Auth.getAuthorizationHeader(),\n      },\n    });\n  }\n  getDislikes(pictureId) {\n    return axios.get(\"http://localhost:8080/dislikes/\" + pictureId, {\n      headers: {\n        Authorization: Auth.getAuthorizationHeader(),\n      },\n    });\n  }\n\n}\n\nexport default new ApiCalls();\n","/Users/clementcardona/Desktop/SDA-group-project/frontend/src/components/UploadButton.jsx",["163","164","165","166"],"import {React,useState,useEffect} from \"react\";\nimport axios from \"axios\";\nimport Auth from \"../services/Auth\";\nimport Overlay from \"react-overlay-component\";\n\n\n\n\n/**\n * Component to handle file upload.\n * Works for image uploads, but can be edited to work for any file.\n */\n\n\n export default function UploadButton() {\n\n  //constants\n  \n  //Manage the overlay\n  const [isOpen, setOverlay] = useState(false);\n  const closeOverlay = () => setOverlay(false);\n\n  // State to store uploaded file\n  \n  const [file, setFile] = useState();\n  const [pic, setPic] = useState(\"\");\n  const configs = {\n    animate: true,\n    // clickDismiss: false,\n    // escapeDismiss: false,\n    // focusOutline: false,\n};\n\n\n  //HandleFile\n  function handleFile(event) {\n    setFile(event.target.files[0]);   \n   }\n\n\n\n  // Handle the upload to dB //\n  function handleUpload() {\n\n    console.log(file,\"state file\");\n             \n    const formdata = new FormData()\n    formdata.append('file',file);\n    formdata.append('user',file);      \n\n    console.log(formdata,\"formdata\");\n\n    console.log(\"token\" ,Auth.getAuthorizationHeader() );\n\n    axios.post(\n      \"http://localhost:8080/upload\",\n      formdata,\n      {\n        headers: { \n          \"Authorization\": Auth.getAuthorizationHeader() }\n      }\n    );\n    closeOverlay();\n  }\n\n\n/// return image at id 1 - from db\n\nfunction getPicOne(){\n  axios.get(\n    \"http://localhost:8080/files/1\",   \n    {\n      headers: { \n        \"Authorization\": Auth.getAuthorizationHeader() },\n    }\n  )\n  .then((res) => {\n    console.log(res.data)          \n  })\n  .catch((error) => {\n    console.error(error)\n  });\n}\n\n\n/* useEffect(() => {\n  getPicOne();  \n  //console.log(pic);\n},[]); */\n\n  return (\n    \n   <div>\n            <button\n                className=\"btn-submit-green\"\n                onClick={() => {\n                    setOverlay(true);\n                }}\n            >\n                +\n            </button>\n\n            <Overlay configs={configs} isOpen={isOpen} closeOverlay={closeOverlay}>\n\n                <h2>Upload a picture</h2>\n                <div className=\"upload-box\">\n               \n                <input type=\"file\" onChange={handleFile} />                             \n                <button className=\"btn-grey\" type=\"button\" onClick={handleUpload}>\n                Upload\n              </button>\n              </div>\n              \n            </Overlay>\n        </div>\n \n     \n            \n    \n  );\n}\n\n\n\n\n\n","/Users/clementcardona/Desktop/SDA-group-project/frontend/src/components/Navbar.jsx",["167"],"import { React } from \"react\";\n\nimport navLogo from \"../assets/img/logo/instyle.svg\";\n\nexport default function Navbar() {\n  return (\n    <div>\n      <nav>\n        <div></div>\n        {/* <img id=\"nav-logo\" src={navLogo}></img> */}\n\n        <div id=\"nav-main-title\">\n          <h3><strong>[In]Style</strong></h3>\n                    <p> Be the one</p>\n        </div>\n      </nav>\n    </div>\n  );\n}\n","/Users/clementcardona/Desktop/SDA-group-project/frontend/src/components/SlidingMenu.jsx",["168","169","170","171","172","173"],"import { slide as Menu } from 'react-burger-menu'\n\nimport Auth from '../services/Auth'\n\nimport king from \"../assets/img/icons/crown.svg\"\nimport git from \"../assets/img/icons/git.svg\"\nimport signout from \"../assets/img/icons/signout.svg\"\nimport discover from \"../assets/img/icons/telescope.svg\"\nimport vote from \"../assets/img/icons/vote.svg\"\nimport profile from \"../assets/img/icons/woman.svg\"\n\nimport AuthApi from \"../api/AuthApi\";\n\nexport default function SlidingMenu() {\n \nconst currentUserEmail = AuthApi.getCurrentUser();\n\n\n  function onLogout(){\n    Auth.logout();\n  }\n\n    return (\n      \n  \n      <Menu >\n               \n      <h3>[In]style</h3>\n\n          <div className=\"menu-item\">\n            <img className=\"img-30\" src={king} />\n            <a id=\"home\" className=\"menu-item-text\" href=\"/\">Current King</a>\n          </div>\n\n          <div className=\"menu-item\">\n          <img className=\"img-30\" src={profile} />\n          <a id=\"home\" className=\"menu-item-text\" href={\"/profile/\"+currentUserEmail}>My Profile</a>\n          </div>\n          \n          <div className=\"menu-item\">\n          <img className=\"img-30\" src={discover} />\n          <a id=\"about\" className=\"menu-item-text\" href=\"/discover\">Discover </a>\n          </div>\n\n          <div className=\"menu-item\">\n          <img className=\"img-30\" src={vote} />\n          <a id=\"contact\" className=\"menu-item-text\" href=\"/vote\">Vote</a>\n          </div>\n\n          <div className=\"menu-item\">\n\n          <div className=\"burger-footer\">\n        \n          <div className=\"burger-footer-item\"> \n          <a id=\"github\" \n          href=\"https://github.com/clecardona/SDA-group-project\" target= \"blank\"><img className=\"img-30\" src={git} /></a>\n           \n          </div>\n\n\n          <div className=\"burger-footer-item\"> \n<button className=\"btn-borderless\" onClick={onLogout}><img className=\"img-30\" src={signout} /></button>\n          </div>\n</div> \n\n         \n\n        </div>\n        </Menu>\n        \n\n        );\n}\n\n  ","/Users/clementcardona/Desktop/SDA-group-project/frontend/src/components/Popup.jsx",["174"],"import { Popover } from \"@varld/popover\";\nimport React, { useState } from \"react\";\n\nexport default function Popup({ onSubmit, signIn }) {\n  //constants\n    const [name, setName] = useState(\"\");\n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n\n \n  //Methods\n\n  function openPopup() {\n    //display the popup\n  }\n \n\n  return (\n    signIn === true ? (\n\n    //sign in button\n    <Popover\n      popover={() => {\n       \n\n        return (\n          <div className=\"popover-login\">\n            <div className=\"form-group\">\n              <label>Email:</label>\n              <input\n                type=\"email\"\n                className=\"form-control\"\n                placeholder=\"Email\"\n                value={email}\n                onChange={(e) => setEmail(e.target.value)}\n              />\n            </div>\n\n            <div className=\"form-group\">\n              <label>Password:</label>\n              <input\n                type=\"password\"\n                placeholder=\"Password\"\n                className=\"form-control\"\n                value={password}\n                onChange={(e) => setPassword(e.target.value)}\n              />\n            </div>\n\n            <button  \n            className=\"btn btn-info\"\n            onClick={() => onSubmit({ email, password })}\n            > Sign in</button>\n          </div>\n        \n        \n                \n        \n        );      \n        \n    }}\n    >\n      <button className=\"btn-blue\"> Sign in</button>\n    </Popover>\n\n  \n ) : (\n\n  //TODO - register button\n  <Popover\n  popover={() => {\n   \n\n    return (\n        <div className=\"card-body\">\n            <h4 className=\"card-title\">Register</h4>\n            <div>\n                <div className=\"form-group\">\n                    <label>Name:</label>\n                    <input\n                        type=\"text\"\n                        className=\"form-control\"\n                        value={name}\n                        onChange={(e) => setName(e.target.value)}\n                        placeholder=\"Name\"\n                    />\n                </div>\n\n                <div className=\"form-group\">\n                    <label>Email:</label>\n                    <input\n                        type=\"email\"\n                        value={email}\n                        onChange={(e) => setEmail(e.target.value)}\n                        className=\"form-control\"\n                        placeholder=\"Email\"\n                    />\n                </div>\n\n                <div className=\"form-group\">\n                    <label>Password:</label>\n                    <input\n                        type=\"password\"\n                        placeholder=\"Password\"\n                        className=\"form-control\"\n                        value={password}\n                        onChange={(e) => setPassword(e.target.value)}\n                    />\n                </div>\n\n                <div className=\"form-group\">\n                    <button\n                        className=\"btn btn-success\"\n                        onClick={(e) => onSubmit({ name, email, password })}\n                    >\n                        Create account\n                    </button>\n                </div>\n            </div>\n        </div>\n\n    );      \n    \n}}\n>\n  <button className=\"btn-white\">Register</button>\n</Popover>\n    )\n  );\n}\n","/Users/clementcardona/Desktop/SDA-group-project/frontend/src/components/VoteComponent.jsx",[],"/Users/clementcardona/Desktop/SDA-group-project/frontend/src/pages/ProfilePage/ProfilePageContent.jsx",["175","176","177"],"import React from \"react\";\nimport { useEffect, useState } from \"react\";\n\nimport \"../../styles/base.css\";\nimport AuthApi from \"../../api/AuthApi\";\nimport ProfileCard from \"../../components/ProfileCard\";\nimport EditProfileButton from \"../../components/EditProfileButton\";\nimport Methods from '../../services/Methods'\nimport king from \"../../assets/img/icons/crown.svg\"\nimport like from \"../../assets/img/logo/flame.png\";\nimport dislike from \"../../assets/img/logo/oops.png\";\n\nexport default function ProfilePageContent({users , userToDisplay}) {\n \n // Constants \n\n  const currentUserEmail = AuthApi.getCurrentUser()\n  const winnerId = Methods.getWinner(users)[0]\n  const likes = Methods.getTotalLikesByEmail(users,userToDisplay);\n  const dislikes = Methods.getTotalDislikesByEmail(users,userToDisplay);\n  const username = Methods.getUsernameByEmail(users,userToDisplay);\n  const avatar = Methods.getAvatarByEmail(users,userToDisplay); \n  const pics = Methods.getPicturesByEmail(users,userToDisplay)\n\n  \n\n if (Methods.getEmailById(users,winnerId+1) === userToDisplay){\n    console.log(\"winner\")\n  } else{\n    console.log(\"not winner\")\n  }\n\n  \n  return (\n    <div className=\"profilepage-content\">\n\n            <div>\n              <div className=\"profilepage-container\">\n                <div className=\"profilepage-subcontainer\">\n                  <div className=\"profilepage-box-left\">\n\n                  <div className=\"profilepage-box-left-header\">\n                    \n                  <h2>{username} </h2>\n                 \n                      <div>\n                    { userToDisplay === Methods.getEmailById(users,winnerId+1) && \n                    <img className=\"logo-winner img-30\" src={king} />\n                    }\n                    </div>\n                    \n                    </div>\n                   \n                    <img src={avatar} className=\"img-profile-100\" alt=\"img\" />\n                    \n                    {userToDisplay === currentUserEmail &&\n                    <EditProfileButton />}\n                  </div>\n\n                  <div className=\"profilepage-box-right\">\n                    <p>Overall score :</p>\n                    <p className=\"item-score\">\n                      {likes}\n                      <img className=\"img-30\" src={like} alt=\"logo-like\" />\n                    </p>\n                    <p className=\"item-score\">\n                      {dislikes}\n                      <img className=\"img-30\" src={dislike} alt=\"logo-like\" />\n                    </p>\n                  </div>\n                </div>\n              </div>\n\n              <div>\n                <h2>Styles submitted ...</h2>\n                <div className=\"card-small-container\">\n                <React.Fragment  >\n                    {pics[0].map(item => (\n                      <React.Fragment key={item.id} >\n                        <ProfileCard \n                        item = {item}\n                        userToDisplay ={userToDisplay}\n                        />\n                      \n                      </React.Fragment>\n                    ))}\n                  </React.Fragment>\n                </div>\n              </div>\n            </div>      \n        \n      \n    </div>\n  );\n}\n","/Users/clementcardona/Desktop/SDA-group-project/frontend/src/components/Card.jsx",[],"/Users/clementcardona/Desktop/SDA-group-project/frontend/src/components/UserMeta.jsx",["178"],"import React from \"react\";\n\nimport userThumbnail from \"../assets/img/mockup/user-thumbnail.png\"\n\n\nexport default function UserMeta({user}) {  \n\n    return (\n      <div className=\"user-meta\">\n        <img src = {user.avatar} alt=\"thumb\"/>\n        <div className = \"user-meta-legend\">\n          <a href={\"/profile/\"+user.email} >\n         <p className=\"user-username\">{user.firstname} {user.lastname}</p>\n        </a>\n\n          <a href= {\"http://www.instagram.com/\" + user.instagram} target=\"blank\" >\n          <p className=\"user-instagram\">@{user.instagram}</p>\n\n           </a>\n\n        </div>\n\n      </div>\n    );\n}\n","/Users/clementcardona/Desktop/SDA-group-project/frontend/src/components/EditProfileButton.jsx",["179","180","181","182","183","184","185"],"import { React, useState, useEffect, useRef } from \"react\";\nimport axios from \"axios\";\n\nimport Auth from \"../services/Auth\";\nimport Overlay from \"react-overlay-component\";\nimport edit from \"../assets/img/icons/pen.svg\";\n\n/**\n * Component to handle file upload.\n * Works for image uploads, but can be edited to work for any file.\n */\n\nexport default function EditProfileButton() {\n  //constants\n  const axios = require(\"axios\");\n  //Manage the overlay\n  const [isOpen, setOverlay] = useState(false);\n  const closeOverlay = () => setOverlay(false);\n\n  // State to store uploaded file\n\n  const [file, setFile] = useState();\n  const [pic, setPic] = useState(\"\");\n  const [name, setName] = useState(\"\");\n  const configs = {\n    animate: true,\n  };\n\n  function editName(event) {\n    setName(event.target.value);\n  }\n  //HandleFile\n  function handleFile(event) {\n    setFile(event.target.files[0]);\n  }\n\n  // Handle the upload to dB //\n  function handleUpload() {\n    console.log(file, \"state file\");\n\n    const formdata = new FormData();\n    formdata.append(\"file\", file);\n    formdata.append(\"user\", file);\n\n    console.log(formdata, \"formdata\");\n\n    console.log(\"token\", Auth.getAuthorizationHeader());\n\n    axios.post(\"http://localhost:8080/upload\", formdata, {\n      headers: {\n        Authorization: Auth.getAuthorizationHeader(),\n      },\n      /*   const config = {\n           headers: {\n               'content-type': 'multipart/form-data'\n           }\n       };\n         axios.post(\"http://localhost:8080/upload\",formdata,config)\n             .then((response) => {\n                 alert(\"The file is successfully uploaded\");\n             }).catch((error) => {*/\n    });\n    // onChange(e)\n    // {\n    //     setState({file:e.target.files[0]});\n    // }\n\n    closeOverlay();\n  }\n\n  /// return image at id 1 - from db\n\n  /* useEffect(() => {\n  getPicOne();  \n  //console.log(pic);\n},[]); */\n\n  return (\n    <div>\n      <button\n        className=\"btn-edit\"\n        onClick={() => {\n          setOverlay(true);\n        }}\n      >\n        <img src={edit} />\n      </button>\n\n      <Overlay configs={configs} isOpen={isOpen} closeOverlay={closeOverlay}>\n        <h3>Edit profile</h3>\n\n        <div className=\"overlay-form-group\">\n          <label>Change username</label>\n          <input\n            type=\"text\"\n            placeholder=\"Enter new username\"\n            className=\"form-control\"\n            onChange={editName}\n            value={name}\n            /* value={password} */\n            /* onChange={() => ()} */\n          />\n          <button\n            className=\"btn-grey\"\n            // onClick={(e) => onSubmit({ name, email, password })}\n          >\n            OK\n          </button>\n        </div>\n\n        <div className=\"upload-box\">\n          <label>Change profile picture :</label>\n          {/*   <label htmlFor=\"file\" className=\"btn-grey\" >Select</label> */}\n          {/*  <input type=\"file\" onChange={handleFile} />*/}\n          {/*<input type=\"file\" accept=\"image/*\" multiple = \"false\" onChange={onchange}/>*/}\n\n          <button className=\"btn-grey\" type=\"button\" onClick={handleUpload}>\n            Upload\n          </button>\n        </div>\n      </Overlay>\n    </div>\n  );\n}\n","/Users/clementcardona/Desktop/SDA-group-project/frontend/src/components/ProfileCard.jsx",[],{"ruleId":"186","replacedBy":"187"},{"ruleId":"188","replacedBy":"189"},{"ruleId":"190","severity":1,"message":"191","line":16,"column":8,"nodeType":"192","messageId":"193","endLine":16,"endColumn":15},{"ruleId":"194","severity":1,"message":"195","line":54,"column":8,"nodeType":"196","endLine":54,"endColumn":29,"suggestions":"197"},{"ruleId":"190","severity":1,"message":"198","line":1,"column":17,"nodeType":"192","messageId":"193","endLine":1,"endColumn":25},{"ruleId":"190","severity":1,"message":"199","line":1,"column":27,"nodeType":"192","messageId":"193","endLine":1,"endColumn":36},{"ruleId":"190","severity":1,"message":"200","line":8,"column":9,"nodeType":"192","messageId":"193","endLine":8,"endColumn":20},{"ruleId":"190","severity":1,"message":"201","line":12,"column":7,"nodeType":"192","messageId":"193","endLine":12,"endColumn":12},{"ruleId":"190","severity":1,"message":"202","line":5,"column":10,"nodeType":"192","messageId":"193","endLine":5,"endColumn":18},{"ruleId":"203","severity":1,"message":"204","line":19,"column":10,"nodeType":"192","messageId":"205","endLine":19,"endColumn":18},{"ruleId":"206","severity":1,"message":"207","line":39,"column":17,"nodeType":"208","messageId":"209","endLine":43,"endColumn":18,"fix":"210"},{"ruleId":"211","severity":1,"message":"212","line":48,"column":17,"nodeType":"208","endLine":48,"endColumn":20},{"ruleId":"190","severity":1,"message":"213","line":7,"column":8,"nodeType":"192","messageId":"193","endLine":7,"endColumn":9},{"ruleId":"190","severity":1,"message":"214","line":4,"column":10,"nodeType":"192","messageId":"193","endLine":4,"endColumn":14},{"ruleId":"190","severity":1,"message":"215","line":5,"column":10,"nodeType":"192","messageId":"193","endLine":5,"endColumn":17},{"ruleId":"190","severity":1,"message":"216","line":8,"column":8,"nodeType":"192","messageId":"193","endLine":8,"endColumn":20},{"ruleId":"190","severity":1,"message":"217","line":11,"column":8,"nodeType":"192","messageId":"193","endLine":11,"endColumn":18},{"ruleId":"190","severity":1,"message":"218","line":12,"column":8,"nodeType":"192","messageId":"193","endLine":12,"endColumn":15},{"ruleId":"190","severity":1,"message":"198","line":1,"column":17,"nodeType":"192","messageId":"193","endLine":1,"endColumn":25},{"ruleId":"190","severity":1,"message":"199","line":1,"column":27,"nodeType":"192","messageId":"193","endLine":1,"endColumn":36},{"ruleId":"190","severity":1,"message":"191","line":8,"column":8,"nodeType":"192","messageId":"193","endLine":8,"endColumn":15},{"ruleId":"190","severity":1,"message":"219","line":7,"column":8,"nodeType":"192","messageId":"193","endLine":7,"endColumn":18},{"ruleId":"190","severity":1,"message":"220","line":2,"column":8,"nodeType":"192","messageId":"193","endLine":2,"endColumn":13},{"ruleId":"190","severity":1,"message":"221","line":4,"column":8,"nodeType":"192","messageId":"193","endLine":4,"endColumn":12},{"ruleId":"190","severity":1,"message":"200","line":12,"column":9,"nodeType":"192","messageId":"193","endLine":12,"endColumn":20},{"ruleId":"190","severity":1,"message":"222","line":16,"column":9,"nodeType":"192","messageId":"193","endLine":16,"endColumn":24},{"ruleId":"190","severity":1,"message":"223","line":19,"column":10,"nodeType":"192","messageId":"193","endLine":19,"endColumn":15},{"ruleId":"190","severity":1,"message":"224","line":27,"column":12,"nodeType":"192","messageId":"193","endLine":27,"endColumn":24},{"ruleId":"194","severity":1,"message":"225","line":41,"column":6,"nodeType":"196","endLine":41,"endColumn":8,"suggestions":"226"},{"ruleId":"190","severity":1,"message":"199","line":2,"column":10,"nodeType":"192","messageId":"193","endLine":2,"endColumn":19},{"ruleId":"190","severity":1,"message":"198","line":2,"column":21,"nodeType":"192","messageId":"193","endLine":2,"endColumn":29},{"ruleId":"190","severity":1,"message":"227","line":14,"column":7,"nodeType":"192","messageId":"193","endLine":14,"endColumn":23},{"ruleId":"190","severity":1,"message":"228","line":22,"column":11,"nodeType":"192","messageId":"193","endLine":22,"endColumn":15},{"ruleId":"229","severity":1,"message":"230","line":36,"column":18,"nodeType":"208","endLine":36,"endColumn":66},{"ruleId":"190","severity":1,"message":"231","line":1,"column":8,"nodeType":"192","messageId":"193","endLine":1,"endColumn":11},{"ruleId":"190","severity":1,"message":"199","line":1,"column":24,"nodeType":"192","messageId":"193","endLine":1,"endColumn":33},{"ruleId":"190","severity":1,"message":"232","line":26,"column":10,"nodeType":"192","messageId":"193","endLine":26,"endColumn":13},{"ruleId":"190","severity":1,"message":"233","line":26,"column":15,"nodeType":"192","messageId":"193","endLine":26,"endColumn":21},{"ruleId":"190","severity":1,"message":"234","line":69,"column":10,"nodeType":"192","messageId":"193","endLine":69,"endColumn":19},{"ruleId":"190","severity":1,"message":"218","line":3,"column":8,"nodeType":"192","messageId":"193","endLine":3,"endColumn":15},{"ruleId":"229","severity":1,"message":"230","line":31,"column":13,"nodeType":"208","endLine":31,"endColumn":50},{"ruleId":"229","severity":1,"message":"230","line":36,"column":11,"nodeType":"208","endLine":36,"endColumn":51},{"ruleId":"229","severity":1,"message":"230","line":41,"column":11,"nodeType":"208","endLine":41,"endColumn":52},{"ruleId":"229","severity":1,"message":"230","line":46,"column":11,"nodeType":"208","endLine":46,"endColumn":48},{"ruleId":"229","severity":1,"message":"230","line":56,"column":82,"nodeType":"208","endLine":56,"endColumn":118},{"ruleId":"229","severity":1,"message":"230","line":62,"column":55,"nodeType":"208","endLine":62,"endColumn":95},{"ruleId":"190","severity":1,"message":"235","line":13,"column":12,"nodeType":"192","messageId":"193","endLine":13,"endColumn":21},{"ruleId":"190","severity":1,"message":"199","line":2,"column":10,"nodeType":"192","messageId":"193","endLine":2,"endColumn":19},{"ruleId":"190","severity":1,"message":"198","line":2,"column":21,"nodeType":"192","messageId":"193","endLine":2,"endColumn":29},{"ruleId":"229","severity":1,"message":"230","line":48,"column":21,"nodeType":"208","endLine":48,"endColumn":70},{"ruleId":"190","severity":1,"message":"236","line":3,"column":8,"nodeType":"192","messageId":"193","endLine":3,"endColumn":21},{"ruleId":"190","severity":1,"message":"199","line":1,"column":27,"nodeType":"192","messageId":"193","endLine":1,"endColumn":36},{"ruleId":"190","severity":1,"message":"237","line":1,"column":38,"nodeType":"192","messageId":"193","endLine":1,"endColumn":44},{"ruleId":"190","severity":1,"message":"220","line":2,"column":8,"nodeType":"192","messageId":"193","endLine":2,"endColumn":13},{"ruleId":"190","severity":1,"message":"232","line":23,"column":10,"nodeType":"192","messageId":"193","endLine":23,"endColumn":13},{"ruleId":"190","severity":1,"message":"233","line":23,"column":15,"nodeType":"192","messageId":"193","endLine":23,"endColumn":21},{"ruleId":"190","severity":1,"message":"238","line":33,"column":12,"nodeType":"192","messageId":"193","endLine":33,"endColumn":22},{"ruleId":"229","severity":1,"message":"230","line":86,"column":9,"nodeType":"208","endLine":86,"endColumn":27},"no-native-reassign",["239"],"no-negated-in-lhs",["240"],"no-unused-vars","'AuthApi' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'url'. Either include it or remove the dependency array.","ArrayExpression",["241"],"'useState' is defined but never used.","'useEffect' is defined but never used.","'currentUser' is assigned a value but never used.","'email' is assigned a value but never used.","'faGithub' is defined but never used.","no-redeclare","'onLogout' is already defined.","redeclared","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXOpeningElement","noTargetBlank",{"range":"242","text":"243"},"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'t' is assigned a value but never used.","'Link' is defined but never used.","'Popover' is defined but never used.","'UploadButton' is defined but never used.","'homeButton' is defined but never used.","'navLogo' is defined but never used.","'background' is defined but never used.","'axios' is defined but never used.","'Auth' is defined but never used.","'JSON_MOCKUP_URL' is assigned a value but never used.","'users' is assigned a value but never used.","'fetchdataURL' is defined but never used.","React Hook useEffect has a missing dependency: 'fetchdataMOCKUP'. Either include it or remove the dependency array.",["244"],"'currentUserEmail' is assigned a value but never used.","'i18n' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'Api' is defined but never used.","'pic' is assigned a value but never used.","'setPic' is assigned a value but never used.","'getPicOne' is defined but never used.","'openPopup' is defined but never used.","'userThumbnail' is defined but never used.","'useRef' is defined but never used.","'handleFile' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"245","fix":"246"},[1187,1187]," rel=\"noreferrer\"",{"desc":"247","fix":"248"},"Update the dependencies array to be: [setUsers, setStatus, url]",{"range":"249","text":"250"},"Update the dependencies array to be: [fetchdataMOCKUP]",{"range":"251","text":"252"},[1714,1735],"[setUsers, setStatus, url]",[1131,1133],"[fetchdataMOCKUP]"]